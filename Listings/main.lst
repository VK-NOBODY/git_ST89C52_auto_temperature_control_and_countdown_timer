C51 COMPILER V9.60.7.0   MAIN                                                              06/06/2024 20:44:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: F:\RUANJIAN\Keil_v5\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "UART.h"
   2          #include "Timer0.h"
   3          #include "XPT2046.h"
   4          #include <stdio.h>
   5          #include "Delay.h"
   6          #include "MatrixKey.h"
   7          #include "LCD1602.h"
   8          #include "OneWire.h"
   9          #include "DS18B20.h"
  10          #include <stdlib.h>
  11          #include "Nixie.h"
  12          #include "reg52.h"
  13          #include "public.h"
  14          #include "smg.h"
  15          #include "ired.h"
  16          #include "Key.h"
  17          #include "AT24C02.h"
  18          #include "Nixie2.h"
  19          #include "MatrixLED.h"
  20          //定义直流电机控制管脚
  21          sbit DC_Motor=P1^0;
  22          #define DC_MOTOR_RUN_TIME 5000  
  23          unsigned char KeyNum;
  24          unsigned char Min,Sec,MiniSec;
  25          unsigned char RunFlag=1;
  26          int temp5 = 0;
  27          int temp = 1;
  28          int temp1 = 0;
  29          static int temp2 = 0;
  30          float T;
  31          int num1,num2,num3,num4,num5,Offset;
  32          u8 ired_buf[3];
  33          
  34          sbit BEEP=P2^5; //将P2.5管脚定义为BEEP
  35          
  36          
  37          unsigned char code Animation[]={
  38          0x00,0x00,0x7F,0x41,0x41,0x41,0x7F,0x00,
  39          0x00,0x00,0x21,0x61,0x7F,0x01,0x01,0x00,
  40          0x00,0x00,0x4F,0x49,0x49,0x49,0x79,0x00,
  41          0x00,0x00,0x49,0x49,0x49,0x49,0x7F,0x00,
  42          0x00,0x00,0x78,0x08,0x08,0x08,0x7F,0x00,
  43          0x00,0x00,0x79,0x49,0x49,0x49,0x4F,0x00,
  44          0x00,0x00,0x7F,0x49,0x49,0x49,0x4F,0x00,
  45          0x00,0x00,0x40,0x40,0x40,0x40,0x7F,0x00,
  46          0x00,0x00,0x7F,0x49,0x49,0x49,0x7F,0x00,
  47          0x00,0x00,0x79,0x49,0x49,0x49,0x7F,0x00,
  48          0x21,0x7F,0x01,0x00,0x7F,0x41,0x41,0x7F,
  49          0x21,0x7F,0x01,0x00,0x21,0x7F,0x01,0x00,
  50          0x21,0x7F,0x01,0x00,0x4F,0x49,0x49,0x79,
  51          0x21,0x7F,0x01,0x00,0x49,0x49,0x49,0x7F,
  52          0x21,0x7F,0x01,0x00,0x78,0x08,0x08,0x7F,
  53          0x21,0x7F,0x01,0x00,0x79,0x49,0x49,0x4F,
  54          0x21,0x7F,0x01,0x00,0x7F,0x49,0x49,0x4F,
C51 COMPILER V9.60.7.0   MAIN                                                              06/06/2024 20:44:02 PAGE 2   

  55          0x21,0x7F,0x01,0x01,0x40,0x40,0x40,0x7F,
  56          0x21,0x7F,0x01,0x00,0x7F,0x49,0x49,0x7F,
  57          0x21,0x7F,0x01,0x00,0x7F,0x49,0x49,0x7F,
  58          0x4F,0x49,0x79,0x00,0x7F,0x41,0x41,0x7F,
  59          0x4F,0x49,0x79,0x00,0x00,0x21,0x7F,0x01,
  60          0x4F,0x49,0x79,0x00,0x4F,0x49,0x49,0x79,
  61          0x4F,0x49,0x79,0x00,0x49,0x49,0x49,0x7F,
  62          0x4F,0x49,0x79,0x00,0x78,0x08,0x08,0x7F,
  63          0x4F,0x49,0x79,0x00,0x79,0x49,0x49,0x4F,
  64          0x4F,0x49,0x79,0x00,0x7F,0x49,0x49,0x4F,
  65          0x4F,0x49,0x79,0x00,0x7F,0x49,0x49,0x7F,
  66          0x4F,0x49,0x79,0x00,0x79,0x49,0x49,0x7F,
  67          0x49,0x49,0x7F,0x00,0x7F,0x41,0x41,0x7F
  68          
  69          };
  70          void Uart_SendDate(char  dat)
  71          {
  72   1          ES = 0;  // 关闭串口中断，防止在发送过程中发生中断
  73   1          SBUF = dat; // 将要发送的数据放入串口发送缓冲寄存器
  74   1          while(TI!= 1); // 等待直到发送完毕，TI为发送中断标志位
  75   1          TI = 0; // 清除发送中断标志位
  76   1          ES = 1; // 打开串口中断
  77   1      }
  78           
  79          char putchar(char c)//将返回的数值打印到串口
  80          {
  81   1          Uart_SendDate(c);// 调用Uart_SendDate函数发送字符
  82   1          return c; // 返回发送的字符，通过printf输出
  83   1      
  84   1      }
  85          
  86          void main()
  87          {
  88   1       unsigned char i,Offset=0,Count=0;
  89   1        DC_Motor=0;//关闭电机
  90   1        LCD_Init(); //LCD初始化
  91   1        Delay(1000); //延迟等待初始化成功
  92   1        UART_Init(0xF4); //串口初始化
  93   1        Timer0_Init(); //定时器初始化
  94   1        ired_init();//红外初始化
  95   1        Timer0_Init();
  96   1      
  97   1        Sec=AT24C02_ReadByte(1);
  98   1        Sec=24;
  99   1        
 100   1        while(1)
 101   1        {   
 102   2      
 103   2      
 104   2      
 105   2              // 检测红外按键1是否按下 (假设红外按键1的码是0x3F39)
 106   2      //        if (ired_buf[0] == 0x3F && ired_buf[1] == 0x39) {
 107   2      //            temp  = 0;
 108   2      //            smg_display(ired_buf, 6);
 109   2      //          
 110   2      //        }
 111   2              
 112   2            KeyNum=Key();   //获取独立按键键码
 113   2            if(KeyNum)      //如果按键按下
 114   2            {
 115   3              if(KeyNum==1) //如果K1按键按下
 116   3              {
C51 COMPILER V9.60.7.0   MAIN                                                              06/06/2024 20:44:02 PAGE 3   

 117   4                temp2 = 1;
 118   4      
 119   4              } else if(KeyNum == 2) {
 120   4                temp2 = 2;
 121   4              }
 122   3              else if(KeyNum == 3) {
 123   4                temp2 = 3;
 124   4              }
 125   3            }
 126   2            
 127   2      
 128   2      
 129   2          
 130   2      
 131   2      
 132   2          if(temp1 == 1) {
 133   3      
 134   3          
 135   3      
 136   3      
 137   3            //else if(P3^0==0)      //如果K1按键按下
 138   3      //      {
 139   3      //        Delay(20);    //延时消抖
 140   3      //        while(P3^0==0); //松手检测
 141   3      //        Delay(20);    //延时消抖
 142   3      //          KeyNum = 2;
 143   3      //      } else if(P3^2==0)      //如果K1按键按下
 144   3      //      {
 145   3      //        Delay(20);    //延时消抖
 146   3      //        while(P3^2==0); //松手检测
 147   3      //        Delay(20);    //延时消抖
 148   3      //          KeyNum = 3;
 149   3      //      } else {  //如果K1按键按下
 150   3      //          KeyNum = 0;
 151   3      //      } 
 152   3      
 153   3      
 154   3      
 155   3            if(temp2 == 1){
 156   4              LCD_ShowNum(1,1,Sec,3);
 157   4            }  
 158   3            else if(temp2 == 2) {
 159   4              
 160   4              while(temp2==2) //如果K1按键按下
 161   4              {
 162   5                
 163   5                int intSec2 = (int)Sec;
 164   5                MatrixLED_Init();
 165   5                
 166   5                for(i=0;i<8;i++)  //循环8次，显示8列数据
 167   5                {
 168   6                  MatrixLED_ShowColumn(i,Animation[i+ 8 * intSec2]);
 169   6                }
 170   5                Count++;      //计次延时
 171   5                if(Count>60)
 172   5                {
 173   6                  Count=0;
 174   6                  
 175   6                }
 176   5                KeyNum=Key(); 
 177   5                if(KeyNum != 0) {
 178   6                  temp2 = KeyNum;
C51 COMPILER V9.60.7.0   MAIN                                                              06/06/2024 20:44:02 PAGE 4   

 179   6                  break;
 180   6                }
 181   5                
 182   5              }
 183   4            } 
 184   3            else if (temp2 != 3){
 185   4              Nixie(1,Sec/10);
 186   4              Nixie(2,Sec%10);
 187   4              
 188   4            }
 189   3            
 190   3          }
 191   2            
 192   2          
 193   2        }
 194   1      
 195   1      }
 196          
 197          void Sec_Loop(void)
 198          {
 199   1        if(RunFlag)
 200   1        {
 201   2          MiniSec++;
 202   2          if(MiniSec>=24)
 203   2          {
 204   3            MiniSec=0;
 205   3            Sec--;
 206   3            if(Sec<=0)
 207   3            {
 208   4              Sec=24;
 209   4            }
 210   3          }
 211   2        }
 212   1        
 213   1      }
 214          
 215          
 216          
 217          
 218          
 219          void timer_rutine() interrupt 1
 220          { 
 221   1        static unsigned int cnt = 0;
 222   1        static unsigned int cnt2 = 0;
 223   1         static unsigned int count_delay = 0; // 新增延时计数变量
 224   1        
 225   1        //static unsigned int T0Count1,T0Count2,T0Count3;
 226   1        TL0 = 0x18;   //设置定时初值   (65536 - 1000)%256  低八位
 227   1        TH0 = 0xFC;   //设置定时初值   (65536 - 1000)/256  高八位
 228   1            ired_buf[0]=gsmg_code[gired_data[2]/16];//将控制码高4位转换为数码管段码
 229   1          ired_buf[1]=gsmg_code[gired_data[2]%16];//将控制码低4位转换为数码管段码
 230   1          ired_buf[2]=0X76;//显示H的段码
 231   1        cnt++;
 232   1        cnt2++;
 233   1        if(cnt  > 10)
 234   1        {
 235   2      //    float vol,NTC,GR;
 236   2            DS18B20_ConvertT(); //转换温度
 237   2            T=DS18B20_ReadT();  //读取温度  
 238   2            if(temp2 == 3 && cnt2 > 200) {
 239   3              int intSec = (int)Sec;
 240   3              if(temp5 != intSec) {
C51 COMPILER V9.60.7.0   MAIN                                                              06/06/2024 20:44:02 PAGE 5   

 241   4                      printf("num:%d",intSec);
 242   4              } 
 243   3              temp5 = intSec;
 244   3                cnt2 = 0;
 245   3            }
 246   2      
 247   2            
 248   2            
 249   2          cnt = 0;
 250   2          
 251   2      
 252   2        }
 253   1          count_delay++; // 增加延时计数
 254   1          if (count_delay >= 20) // 控制计数速度
 255   1          {   
 256   2              
 257   2      
 258   2              count_delay = 0;
 259   2      
 260   2              if (ired_buf[0] == 0x3f && ired_buf[1] == 0x39) { //1,0c
 261   3                  temp1 = 0;
 262   3                  temp = 1;
 263   3                  if (T >= 28) {
 264   4                      DC_Motor = 1; //开启电机
 265   4                    BEEP=!BEEP;//产生一定频率的脉冲信号
 266   4                  }
 267   3                  else {
 268   4                      DC_Motor = 0; //关闭电机
 269   4                    BEEP=0;//关闭蜂鸣器
 270   4                  }
 271   3              }
 272   2      
 273   2              if (ired_buf[0] == 0x06 && ired_buf[1] == 0x7f) { //2,18
 274   3                  temp = 0;
 275   3                  temp1 = 1;
 276   3                  DC_Motor = 0; //关闭电机
 277   3                  BEEP=0;//关闭蜂鸣器
 278   3      
 279   3                  Sec_Loop();
 280   3              }
 281   2      
 282   2          }
 283   1          
 284   1              
 285   1            if(temp == 1) {
 286   2              num1 = T / 10;
 287   2              num2 = ((int)T) % 10;
 288   2              num3 = ((int)(T*10)) % 10;
 289   2              num4 = ((int)(T*100)) % 10;
 290   2              num5 = ((int)(T*1000)) % 10;    
 291   2      
 292   2              Nixie(1,num1);
 293   2              NixieWithDP(2,num2);
 294   2              Nixie(3,num3);
 295   2              Nixie(4,num4);
 296   2              Nixie(5,num5);
 297   2          }
 298   1          
 299   1          
 300   1          
 301   1      
 302   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              06/06/2024 20:44:02 PAGE 6   

 303          
 304          void UART_Routine() interrupt 4
 305          {
 306   1        //  static unsigned int cnt2 = 0;
 307   1        if(RI==1)         //如果接收标志位为1，接收到了数据
 308   1        {
 309   2          static int num=0;
 310   2          RI = 0; 
 311   2          num++;
 312   2        }
 313   1      
 314   1        //cnt2++;
 315   1      //  if(cnt2 >= 1000) {
 316   1      
 317   1        //      cnt2 = 0;
 318   1      //  }
 319   1        
 320   1      
 321   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1095    ----
   CONSTANT SIZE    =    247    ----
   XDATA SIZE       =     40       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
